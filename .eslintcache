[{"D:\\IT-work\\VOTAN2\\votan\\src\\index.js":"1","D:\\IT-work\\VOTAN2\\votan\\src\\serviceWorker.js":"2","D:\\IT-work\\VOTAN2\\votan\\src\\App.js":"3","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\store.js":"4","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\authReducer.js":"5","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\usersCabinetReducer.js":"6","D:\\IT-work\\VOTAN2\\votan\\src\\components\\ErrorPage\\ErrorPage.jsx":"7","D:\\IT-work\\VOTAN2\\votan\\src\\components\\Main\\MainPage.jsx":"8","D:\\IT-work\\VOTAN2\\votan\\src\\components\\Header\\header.jsx":"9","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\AccountPage.jsx":"10","D:\\IT-work\\VOTAN2\\votan\\src\\api\\api.js":"11","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\AuthPage.jsx":"12","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\VotingPage.jsx":"13","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\SettingsPage\\SettingsPage.jsx":"14","D:\\IT-work\\VOTAN2\\votan\\src\\utils\\validators.js":"15","D:\\IT-work\\VOTAN2\\votan\\src\\common\\formControls.js":"16","D:\\IT-work\\VOTAN2\\votan\\src\\components\\preloader\\preloader.jsx":"17","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\NevVotingComponent\\NewVotingComponent.jsx":"18","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\NewVotingDraft\\NewVotingDraft.jsx":"19","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\UsersComponent\\usersComponent.jsx":"20","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\UsersComponent\\SingleUserComponent\\singleUserComponent.jsx":"21","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\singleUserInfoReducer.js":"22","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\usersListReducer.js":"23","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\UsersComponent\\UsersListComponent\\UsersListComponent.jsx":"24","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\ArchivePage\\ArchivePage.jsx":"25","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\activeVotingsReducer.js":"26","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\AccountInfo\\AccountInfo.jsx":"27","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\ActiveVotingPage\\questionComponent.jsx":"28","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\Modal_windows\\UserAddApartmentModal\\UserAddApartrmentModal.jsx":"29","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\Modal_windows\\OSBBAddApartmentModal\\OSBBAddApatrmentModal.jsx":"30","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\apartmentsReducer.js":"31","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\OSBBCabinetReducer.js":"32","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\ApartmentsTable\\ApartmentsTable.jsx":"33","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\ApartmentsTable\\SingleApartmentComponent\\singleApartment.jsx":"34","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\OSBBRegisterForm\\osbbRegisterForm.jsx":"35","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\USERCabintPage\\USERCabinetPage.jsx":"36","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\OSBBCabinetPage\\OSBBCabinetPage.jsx":"37","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\RegisterComponent.jsx":"38","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\RegisterOSBB.jsx":"39","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\RegisterClient.jsx":"40","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\regisrerHandler.jsx":"41","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\CLIENTCabinetReducer.js":"42","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\USERCabintPage\\CLIENTSInfo.jsx":"43","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\USERCabintPage\\CLIENTSingleApartment.jsx":"44"},{"size":611,"mtime":1606916819161,"results":"45","hashOfConfig":"46"},{"size":5086,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":847,"mtime":1615990644560,"results":"48","hashOfConfig":"46"},{"size":1263,"mtime":1616068649546,"results":"49","hashOfConfig":"46"},{"size":3236,"mtime":1615496960931,"results":"50","hashOfConfig":"46"},{"size":2096,"mtime":1617370570671,"results":"51","hashOfConfig":"46"},{"size":293,"mtime":1615927562361,"results":"52","hashOfConfig":"46"},{"size":2385,"mtime":1617369692305,"results":"53","hashOfConfig":"46"},{"size":2361,"mtime":1607872347946,"results":"54","hashOfConfig":"46"},{"size":15698,"mtime":1617370747876,"results":"55","hashOfConfig":"46"},{"size":8064,"mtime":1616443600254,"results":"56","hashOfConfig":"46"},{"size":4463,"mtime":1615991142250,"results":"57","hashOfConfig":"46"},{"size":1215,"mtime":1615571117940,"results":"58","hashOfConfig":"46"},{"size":185,"mtime":1603487231396,"results":"59","hashOfConfig":"46"},{"size":944,"mtime":1610489431935,"results":"60","hashOfConfig":"46"},{"size":920,"mtime":1610578010558,"results":"61","hashOfConfig":"46"},{"size":1465,"mtime":1609801438672,"results":"62","hashOfConfig":"46"},{"size":6418,"mtime":1615587160978,"results":"63","hashOfConfig":"46"},{"size":1564,"mtime":1611746415673,"results":"64","hashOfConfig":"46"},{"size":1500,"mtime":1615384941536,"results":"65","hashOfConfig":"46"},{"size":2773,"mtime":1614781597678,"results":"66","hashOfConfig":"46"},{"size":3852,"mtime":1612431437267,"results":"67","hashOfConfig":"46"},{"size":13704,"mtime":1615385133096,"results":"68","hashOfConfig":"46"},{"size":1598,"mtime":1615164365540,"results":"69","hashOfConfig":"46"},{"size":523,"mtime":1615385729440,"results":"70","hashOfConfig":"46"},{"size":9315,"mtime":1615629260510,"results":"71","hashOfConfig":"46"},{"size":2818,"mtime":1617371542306,"results":"72","hashOfConfig":"46"},{"size":9603,"mtime":1615628909336,"results":"73","hashOfConfig":"46"},{"size":3028,"mtime":1616197653553,"results":"74","hashOfConfig":"46"},{"size":2966,"mtime":1616443713464,"results":"75","hashOfConfig":"46"},{"size":3007,"mtime":1615312920991,"results":"76","hashOfConfig":"46"},{"size":8497,"mtime":1617370727388,"results":"77","hashOfConfig":"46"},{"size":4216,"mtime":1617398641494,"results":"78","hashOfConfig":"46"},{"size":1706,"mtime":1616444818975,"results":"79","hashOfConfig":"46"},{"size":5982,"mtime":1615466290012,"results":"80","hashOfConfig":"46"},{"size":2071,"mtime":1615583392141,"results":"81","hashOfConfig":"46"},{"size":1508,"mtime":1617370447147,"results":"82","hashOfConfig":"46"},{"size":1117,"mtime":1615991272022,"results":"83","hashOfConfig":"46"},{"size":3775,"mtime":1616066037529,"results":"84","hashOfConfig":"46"},{"size":3903,"mtime":1615991473924,"results":"85","hashOfConfig":"46"},{"size":1173,"mtime":1615992452590,"results":"86","hashOfConfig":"46"},{"size":4091,"mtime":1616445190449,"results":"87","hashOfConfig":"46"},{"size":2281,"mtime":1615628484367,"results":"88","hashOfConfig":"46"},{"size":614,"mtime":1615566404311,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"vt3kpz",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"92"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"D:\\IT-work\\VOTAN2\\votan\\src\\index.js",[],["200","201"],"D:\\IT-work\\VOTAN2\\votan\\src\\serviceWorker.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\App.js",["202"],"import React from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\n\nimport HeaderContainer from \"./components/Header/header\";\n\nimport MainPage from \"./components/Main/MainPage\";\nimport AccountPage from \"./components/AccountPage/AccountPage\";\nimport ErrorPage from \"./components/ErrorPage/ErrorPage\";\n\nfunction App() {\n\n    return (\n\n     <BrowserRouter>\n         {/*<HeaderContainer/>*/}\n         <div>\n             <Switch>\n                 <Route path='/main' component={MainPage}  />\n                 <Route path='/account' component={AccountPage} />\n                 <Route exact path='*' component={ErrorPage}/>\n             </Switch>\n         </div>\n\n     </BrowserRouter>\n  );\n}\nexport default App;\n","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\store.js",["203","204","205"],"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport signInReducer from \"./authReducer\";\r\nimport apartmentsReducer from \"./apartmentsReducer\";\r\nimport usersCabinetReducer from \"./usersCabinetReducer\";\r\nimport usersListReducer from \"./usersListReducer\";\r\nimport singleUserInfoReducer from \"./singleUserInfoReducer\";\r\nimport activeVotingReducer from \"./activeVotingsReducer\";\r\nimport OSBBCabinetReducer from \"./OSBBCabinetReducer\";\r\nimport CLIENTCabinetReducer from \"./CLIENTCabinetReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    // cabinet: usersCabinetReducer,\r\n    // apartments: apartmentsReducer,\r\n    CLIENTsCabinet: CLIENTCabinetReducer,\r\n    OSBBsCabinet: OSBBCabinetReducer,\r\n    usersList: usersListReducer,\r\n    singleUser: singleUserInfoReducer,\r\n    auth: signInReducer,\r\n    activePolls: activeVotingReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers,  composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store ;","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\authReducer.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\redux\\usersCabinetReducer.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\ErrorPage\\ErrorPage.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\Main\\MainPage.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\Header\\header.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\AccountPage.jsx",["206","207","208","209","210"],"D:\\IT-work\\VOTAN2\\votan\\src\\api\\api.js",["211"],"\r\nimport * as axios from \"axios\";\r\n\r\n// let token = document.cookie.split(';')[0].toString().slice(6)\r\n\r\nlet token = sessionStorage.getItem('token')\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7777/',\r\n    headers: {\r\n        \"Authorization\": \"Bearer \" + sessionStorage.getItem('token')\r\n    }\r\n})\r\n\r\nlet instanceWithoutToken = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7777/'\r\n})\r\n            /* Authentication */\r\n\r\nexport const DAL_Login = (values) => {\r\n    return instanceWithoutToken.post(\r\n        'authentication/login',\r\n        values,\r\n    ).then(\r\n        (res) => {\r\n           return res\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            alert(error)\r\n            console.log(error)\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_Registration_client = (values) => {\r\n    console.log('Registration of client in progress')\r\n    return instanceWithoutToken.post(\r\n        '/authentication/registration',\r\n        values\r\n    ).then(\r\n        (res) => {\r\n            return res\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_Registration_OSBB = (values) => {\r\n    console.log('Registration of osbb in progress')\r\n    return instanceWithoutToken.post(\r\n        '/authentication/registration/osbb',\r\n        values\r\n    ).then(\r\n        (res) => {\r\n            return res\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\n        /* Registration of new OSBB */\r\n\r\n\r\nexport const DAL_RegisterNewOSBB = (newOSBBInfo) => {\r\n    return instanceWithoutToken.post(\r\n        `/osbb/registration`,\r\n        newOSBBInfo\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            alert(error.message)\r\n            return error.error\r\n        }\r\n    )\r\n\r\n}\r\n\r\n            /* Operations with Archive pools */\r\n\r\nexport const DAL_GetPollsArchive = () => {\r\n    console.log('Getting archive voting in progress')\r\n    return instance.get(\r\n        `/polls/archive`,\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_GetPollsArchiveQuestion = (questionId) => {\r\n    console.log('Getting archive voting in progress')\r\n    return instance.get(\r\n        `/polls/archive/${questionId}`,\r\n    )\r\n}\r\n\r\n\r\n        /* Operations with Active pools */\r\n\r\nexport const DAL_Vote = (vote) => {\r\n    console.log('Sending vote')\r\n    return instance.post(\r\n        `/vote`,\r\n        vote\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_GetPollsActive = () => {\r\n    console.log('Getting active voting in progress')\r\n    return instance.get(\r\n        `/polls/osbb/active`,\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_CreateNewVoting = (values) => {\r\n    console.log('Create newVoting in in progress')\r\n\r\n    return instance.post(\r\n        `/polls/create-poll`,\r\n        values\r\n    )\r\n}\r\n\r\n        /* Operations with pools drafts */\r\n\r\nexport const  DAL_GetPollsDraft = () => {\r\n    console.log('Getting polls drafts in progress')\r\n    return instance.get(\r\n        `/polls/draft`,\r\n        ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n        ).catch(\r\n        (res) => {\r\n            console.log(res)\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_SetPollsDraft = (values) => {\r\n    console.log('Getting polls drafts in progress')\r\n    return instance.post(\r\n        `/polls/draft`,\r\n        values\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_DeletePollsDraft = (draftId) => {\r\n    console.log('Getting polls drafts in progress')\r\n    return instance.delete(\r\n        `/polls/draft/${draftId}`\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\n        /* Operations with cabinet */\r\n\r\nexport const DAL_GetCLIENTCabinet = () => {\r\n    console.log('Getting users cabinet in progress')\r\n\r\n    return instance.get(\r\n        `users/cabinet`\r\n    ).then(\r\n        (res) => {\r\n\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            alert(error.message)\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_GetOSBBSCabinet = () => {\r\n    console.log('Getting OSBBs cabinet in progress')\r\n\r\n    return instance.get(\r\n        `/osbb/cabinet`\r\n    )\r\n    .then(\r\n        (res) => {\r\n\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            alert(error.message)\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\n        /* Operations with users */\r\n\r\nexport const DAL_GetUsersList = () => {\r\n    console.log('Getting users in progress')\r\n    return instance.get(\r\n        `users/`\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_GetSingleUser = (userId) => {\r\n    console.log('Getting single in progress')\r\n\r\n    return instance.get(\r\n        `users/${userId}`\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_DeleteUser = (userId) => {\r\n    console.log('Getting single in progress')\r\n\r\n    return instance.delete(\r\n        `admin/users/${userId}`\r\n    ).then(\r\n        (res) => {\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\n        /* Operations with apartments */\r\n\r\nexport const DAL_CreateNewApartment = (newApartmentOptions) => {\r\n    // attach apartment to user account by key\r\n    return instance.post(\r\n        `/apartment`,\r\n        newApartmentOptions\r\n    ).then(\r\n        (res) => {\r\n            return res\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_AttachApartmentToUser = (ownerKey) => {\r\n    // attach apartment to user account by key\r\n    return instance.put(\r\n        `/apartment/key/${ownerKey}`,\r\n    ).then(\r\n        (res) => {\r\n            alert(res.message)\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            alert(error.message)\r\n            return error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_GenerateApartmentKey = (apartmentId) => {\r\n    // generates new apartment key, that uses for attaching apartment to user account\r\n\r\n    return instance.get(\r\n        `/apartment/${apartmentId}/key`,\r\n    ).then(\r\n        (res) => {\r\n            console.log(res)\r\n            return res\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            alert(res.message)\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_DeleteApartment = (apartmentId) => {\r\n    // deleting apartment by ID\r\n    return instance.delete(\r\n        `/apartment/${apartmentId}`,\r\n    ).then(\r\n        (res) => {\r\n\r\n            console.log(res)\r\n            return res\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            alert(res.message)\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\nexport const DAL_DetachApartment = (userId) => {\r\n    // detaching apartment from user\r\n    return instance.put(\r\n        `/apartment/${userId}/detach`,\r\n    ).then(\r\n        (res) => {\r\n            alert(res.message)\r\n            return res.data\r\n        }\r\n    ).catch(\r\n        (res) => {\r\n            alert(res.message)\r\n            return res.error\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\AuthPage.jsx",["212","213"],"import React, {useState} from 'react';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {requiredField} from \"../../utils/validators.js\"\r\nimport {CustomInput} from \"../../common/formControls\";\r\n\r\nimport \"./AuthPage.scss\";\r\nimport {DAL_Login} from \"../../api/api\";\r\nimport {emailValidator} from \"../../utils/validators\";\r\nimport {logIn, settingRole} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useRouteMatch} from \"react-router\";\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const [loginError, setLoginError] = useState(null)\r\n    const [isAuth, setIsAuth] = useState(false)\r\n    let { path, url } = useRouteMatch();\r\n    let handleSubmit = props.handleSubmit;\r\n\r\n    let signInHandler = (values) => {\r\n\r\n        DAL_Login(values)\r\n            .then(response => {\r\n\r\n            console.log(response.data.token)\r\n            sessionStorage.setItem('role', response.data.roles[0].role)\r\n            sessionStorage.setItem('token', response.data.token)\r\n\r\n            props.settingRole(response.data.roles[0].role)\r\n\r\n            if(response.status === 200) {\r\n                setTimeout(() => setIsAuth(true), 2000)\r\n            }\r\n\r\n            }).catch((error) => {\r\n                // Error\r\n                if (error.response) {\r\n                    console.log(error.response)\r\n                    setLoginError(error.response.data.message)\r\n\r\n                } else if (error.request) {\r\n                    console.log(error.request);\r\n                } else {\r\n                    console.log('Error', error.message);\r\n                }\r\n\r\n            });\r\n    };\r\n\r\n    if(isAuth) {return <Redirect to=\"../account\"/>}\r\n\r\n    return(\r\n        <>\r\n            <div className=\"row justify-content-center mr-0 ml-0\">\r\n                <div className=\"col-12 p-0\">\r\n                    <h2 className=\"auth_form_header align-self-start \">Вхід</h2>\r\n                </div>\r\n                <form\r\n                     onSubmit={handleSubmit(signInHandler)}\r\n                     className=\"auth_form_container col-12\"\r\n                >\r\n\r\n                    <Field\r\n                        className=\"auth_field\"\r\n                        name={'email'}\r\n                        id={'email'}\r\n                        component={CustomInput}\r\n                        type=\"text\"\r\n                        placeholder='Електронна адреса'\r\n                        validate={[requiredField, emailValidator]}\r\n                    />\r\n\r\n                    <Field\r\n                        className=\"auth_field\"\r\n                        name={'password'}\r\n                        id={'password'}\r\n                        component={CustomInput}\r\n                        type=\"password\"\r\n                        placeholder='Пароль'\r\n                        validate={[requiredField]}\r\n                    />\r\n                <div>\r\n                    <button className=\"auth_submit btn btn-primary\" disabled={props.pristine || props.submitting}>Увійти</button>\r\n                </div>\r\n                    {loginError &&\r\n                        <div\r\n                            className=\"field_error_text\"\r\n                        >\r\n                            {loginError}\r\n\r\n                        </div>\r\n                    }\r\n                <div className=\"forgot_password\">Забули пароль ?</div>\r\n\r\n                 <hr className=\"auth_hr\"/>\r\n\r\n                    <NavLink\r\n                        className=\"auth_nav_link auth_submit btn btn-primary\"\r\n                        activeClassName={'registration_nav_link_active'}\r\n                        to={`../main/registration`}>Створити акаунт</NavLink>\r\n                </form>\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nconst LogInContainer = (props) => {\r\n\r\n    return(\r\n        <LoginReduxForm logIn={props.logIn} auth={props.auth} settingRole={props.settingRole}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n        isFetching: state.auth.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        logIn: (values) => {dispatch(logIn(values))},\r\n        settingRole: (role) => {dispatch(settingRole(role))},\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInContainer);\r\n\r\nexport const LoginReduxForm = reduxForm( {form: \"logIn\"})(Login);\r\n\r\n","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\VotingPage.jsx",["214","215","216"],"import React from 'react';\r\nimport FacilitiesContainer from \"../ApartmentsTable/ApartmentsTable\";\r\nimport {connect} from \"react-redux\";\r\nimport {  Route, useRouteMatch } from \"react-router-dom\";\r\nimport NewVotingComponent from \"./NevVotingComponent/NewVotingComponent\";\r\n\r\nimport {NewVotingDraft} from \"./NewVotingDraft/NewVotingDraft\";\r\nimport ArchiveVotingContainer from \"../ArchivePage/ArchivePage\";\r\nimport ActiveVotingPage from \"./ActiveVotingPage/questionComponent\";\r\n\r\n\r\nconst VotingPage = (props) => {\r\n    let {path, url} = useRouteMatch()\r\n    return (\r\n        <>\r\n            {/*<Route path={`${path}/active`} component={FacilitiesContainer}/>*/}\r\n            <Route path={`${path}/active`} component={ActiveVotingPage}/>\r\n            <Route path={`${path}/archive`} component={ArchiveVotingContainer}/>\r\n            <Route path={`${path}/new`} component={NewVotingComponent}/>\r\n            {/*<Route path={`${path}/draft`} component={NewVotingDraft}/>*/}\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        role: state.auth.role,\r\n        cabinet: state.cabinet\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(VotingPage);","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\SettingsPage\\SettingsPage.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\utils\\validators.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\common\\formControls.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\preloader\\preloader.jsx",["217"],"import React, {useState} from \"react\";\r\n\r\nimport \"./preloader.scss\"\r\n\r\nconst Preloader = () => {\r\n\r\n    return(\r\n        <svg className=\"preloaderContainer\"\r\n            version=\"1.1\" id=\"L2\" xmlns=\"http://www.w3.org/2000/svg\"\r\n             xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n             width=\"100px\" height=\"100px\"\r\n             viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 100 100\" xmlSpace=\"preserve\">\r\n            <circle fill=\"none\" stroke=\"#007bff\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"50\" cy=\"50\" r=\"48\"/>\r\n                        <line fill=\"none\" strokeLinecap=\"round\" stroke=\"#007bff\" strokeWidth=\"4\" strokeMiterlimit=\"10\" x1=\"50\" y1=\"50\" x2=\"85\" y2=\"50.5\">\r\n              <animateTransform\r\n                  attributeName=\"transform\"\r\n                  dur=\"2s\"\r\n                  type=\"rotate\"\r\n                  from=\"0 50 50\"\r\n                  to=\"360 50 50\"\r\n                  repeatCount=\"indefinite\" />\r\n            </line>\r\n                        <line fill=\"none\" strokeLinecap=\"round\" stroke=\"#007bff\" strokeWidth=\"4\" strokeMiterlimit=\"10\" x1=\"50\" y1=\"50\" x2=\"49.5\" y2=\"74\">\r\n              <animateTransform\r\n                  attributeName=\"transform\"\r\n                  dur=\"15s\"\r\n                  type=\"rotate\"\r\n                  from=\"0 50 50\"\r\n                  to=\"360 50 50\"\r\n                  repeatCount=\"indefinite\" />\r\n            </line>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nexport default  Preloader;","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\NevVotingComponent\\NewVotingComponent.jsx",["218"],"import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm, FieldArray} from \"redux-form\";\r\nimport { CustomTextArea} from \"../../../../common/formControls\";\r\nimport {requiredField} from \"../../../../utils/validators\";\r\n\r\nimport \"./newVotingComponent.scss\"\r\nimport {DAL_CreateNewVoting} from \"../../../../api/api\";\r\n\r\nconst NewVotingComponent = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <NewVotingReduxForm/>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nconst renderQuestions = ({fields, meta: {error}, pristine, submitting}) => {\r\n\r\n    return(\r\n        <ul className=\"new_voting_list row justify-content-center\">\r\n            <div className=\"new_voting_container  col-8 col-md-6\">\r\n\r\n                    <button className=\"new_voting_add_new\" onClick={() => fields.push({})}>\r\n                       <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M21 10.5C21 16.299 16.299 21 10.5 21C4.70101 21 0 16.299 0 10.5C0 4.70101 4.70101 0 10.5 0C16.299 0 21 4.70101 21 10.5Z\" fill=\"#E3F2FD\"/>\r\n                            <path className=\"new_voting_rotation\" d=\"M14.7645 10.1445C14.9608 10.1445 15.1199 10.3036 15.1199 10.4999V10.4999C15.1199 10.6962 14.9608 10.8553 14.7645 10.8553H11.3553C11.0791 10.8553 10.8553 11.0791 10.8553 11.3553V14.7645C10.8553 14.9608 10.6962 15.1199 10.4999 15.1199V15.1199C10.3036 15.1199 10.1445 14.9608 10.1445 14.7645V11.3553C10.1445 11.0791 9.92064 10.8553 9.6445 10.8553H6.23527C6.03899 10.8553 5.87988 10.6962 5.87988 10.4999V10.4999C5.87988 10.3036 6.03899 10.1445 6.23527 10.1445H9.6445C9.92064 10.1445 10.1445 9.92064 10.1445 9.6445V6.23527C10.1445 6.03899 10.3036 5.87988 10.4999 5.87988V5.87988C10.6962 5.87988 10.8553 6.03899 10.8553 6.23527V9.6445C10.8553 9.92064 11.0791 10.1445 11.3553 10.1445H14.7645Z\" fill=\"black\"/>\r\n                        </svg>\r\n                       <span>Додати питання</span>\r\n                    </button>\r\n\r\n                {fields.map((description, index) => (\r\n                    <>\r\n                        <li className=\"new_voting_item align-items-center\" key={index}>\r\n                            <label htmlFor=\"question_description\" className=\"new_voting_input_label\">\r\n                                <span>Текст питання {index+1}</span>\r\n                                <Field\r\n                                    className=\"new_voting_field\"\r\n                                    name={`${description}`+'description'}\r\n                                    id={index}\r\n                                    component={CustomTextArea}\r\n                                    placeholder='Ваше питання'\r\n                                    validate={[requiredField]}\r\n                                />\r\n                            </label>\r\n                            <button className=\"new_voting_delete\" onClick={() => fields.remove(index)}>\r\n                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M8.40994 6.99994L12.7099 2.70994C12.8982 2.52164 13.004 2.26624 13.004 1.99994C13.004 1.73364 12.8982 1.47825 12.7099 1.28994C12.5216 1.10164 12.2662 0.99585 11.9999 0.99585C11.7336 0.99585 11.4782 1.10164 11.2899 1.28994L6.99994 5.58994L2.70994 1.28994C2.52164 1.10164 2.26624 0.99585 1.99994 0.99585C1.73364 0.99585 1.47824 1.10164 1.28994 1.28994C1.10164 1.47825 0.995847 1.73364 0.995847 1.99994C0.995847 2.26624 1.10164 2.52164 1.28994 2.70994L5.58994 6.99994L1.28994 11.2899C1.19621 11.3829 1.12182 11.4935 1.07105 11.6154C1.02028 11.7372 0.994141 11.8679 0.994141 11.9999C0.994141 12.132 1.02028 12.2627 1.07105 12.3845C1.12182 12.5064 1.19621 12.617 1.28994 12.7099C1.3829 12.8037 1.4935 12.8781 1.61536 12.9288C1.73722 12.9796 1.86793 13.0057 1.99994 13.0057C2.13195 13.0057 2.26266 12.9796 2.38452 12.9288C2.50638 12.8781 2.61698 12.8037 2.70994 12.7099L6.99994 8.40994L11.2899 12.7099C11.3829 12.8037 11.4935 12.8781 11.6154 12.9288C11.7372 12.9796 11.8679 13.0057 11.9999 13.0057C12.132 13.0057 12.2627 12.9796 12.3845 12.9288C12.5064 12.8781 12.617 12.8037 12.7099 12.7099C12.8037 12.617 12.8781 12.5064 12.9288 12.3845C12.9796 12.2627 13.0057 12.132 13.0057 11.9999C13.0057 11.8679 12.9796 11.7372 12.9288 11.6154C12.8781 11.4935 12.8037 11.3829 12.7099 11.2899L8.40994 6.99994Z\" fill=\"#D2D2D2\"/>\r\n                                </svg>\r\n                            </button>\r\n                        </li>\r\n                    </>\r\n                ))}\r\n\r\n                <hr/>\r\n                <button className=\"btn btn-primary new_voting_start_voting\" type=\"submit\" disabled={pristine || submitting}>Почати голосування</button>\r\n            </div>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst NewVotingForm = (props) => {\r\n    let handleSubmit = props.handleSubmit;\r\n    const [requestStatus, setRequestStatus] = useState(null)\r\n    let addNewVoteHandler = (values) => {\r\n        let questions = values.questions\r\n        debugger\r\n        DAL_CreateNewVoting(questions)\r\n            .then(response => {\r\n                if(response.data.status === 200) {\r\n                    setRequestStatus('Питання успішно додано')\r\n                }\r\n            }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response)\r\n                    setRequestStatus(error.response.data.message)\r\n                } else {\r\n                console.log('Error', error.message);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    return(\r\n        <form\r\n            onSubmit={handleSubmit(addNewVoteHandler)}\r\n            className=\"auth_form_container\"\r\n        >\r\n            {/*{ requestStatus ?  'requestStatus' = requestStatus : null }*/}\r\n            <FieldArray name=\"questions\"  component={renderQuestions}/>\r\n            { requestStatus ?  <p className=\"new_voting_error\">{requestStatus} </p> : null }\r\n        </form>\r\n    )\r\n}\r\nexport const NewVotingReduxForm =  reduxForm(\r\n    {form: \"newVoting\"}\r\n)(NewVotingForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        role: state.auth.role,\r\n        cabinet: state.cabinet,\r\n        newVotingForm: state.newVotingForm\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(NewVotingComponent);","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\NewVotingDraft\\NewVotingDraft.jsx",["219","220"],"import React, {useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nimport \"./newVotingDraft.scss\"\r\nimport {DAL_CreateNewVoting, DAL_GetPollsDraft} from \"../../../../api/api\";\r\nimport NewVotingComponent from \"../NevVotingComponent/NewVotingComponent\";\r\n\r\nexport const NewVotingDraft = (props) => {\r\n\r\n    const [drafts, setDrafts] = useState([\r\n        {\r\n            \"id\": 1,\r\n            \"startDate\": \"2021-12-19\",\r\n            \"questions\": [\r\n                {\r\n                    \"description\": \"string\",\r\n                    \"id\": 1\r\n                }\r\n            ]\r\n        }\r\n    ])\r\n    let clickHandler = () =>{\r\n        let savedDrafts = DAL_GetPollsDraft()\r\n        setDrafts([...drafts, savedDrafts])\r\n        console.log(drafts)\r\n    }\r\n    useEffect(()=>{\r\n        let savedDrafts = DAL_GetPollsDraft()\r\n        setDrafts([...drafts, savedDrafts])\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"voting_drafts_header\" >Чернетка</h2>\r\n            <div className=\"btn btn-secondary mb-2\" onClick={clickHandler}>get drafts manually</div>\r\n            <NewVotingComponent props={drafts}/>\r\n        </>\r\n    );\r\n}\r\n//\r\n// NewVotingComponent = connect(\r\n//     state => ({\r\n//         initialValues: drafts\r\n//     }), {}\r\n// )\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        role: state.auth.role,\r\n        cabinet: state.cabinet,\r\n        newVotingForm: state.newVotingForm\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(NewVotingDraft);","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\UsersComponent\\usersComponent.jsx",["221","222","223","224","225"],"import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { DAL_GetUsersList} from \"../../../api/api\";\r\nimport { Route, useRouteMatch, Switch} from \"react-router-dom\";\r\nimport {getUsersListThunkCreator} from \"../../../redux/usersListReducer\";\r\n\r\nimport {UsersListComponent} from \"./UsersListComponent/UsersListComponent\";\r\nimport SingleUserComponent from \"./SingleUserComponent/singleUserComponent\";\r\nimport \"./usersComponent.scss\"\r\nconst UsersComponent = (props) => {\r\n\r\n    const usersList = () => {\r\n        let usersList = getUsersListThunkCreator()\r\n\r\n    }\r\n    let {path, url} = useRouteMatch()\r\n    return (\r\n        <>\r\n            <h2>Users component</h2>\r\n            <button className=\"btn\">Get users list</button>\r\n            <hr/>\r\n            <ul className=\"users_comp_list\">\r\n                 <Switch>\r\n                     <Route exact path={`${path}`}><UsersListComponent usersList={props.usersList}/></Route>\r\n                     <Route exact path={`${path}/:${props.usersList.id}`}><SingleUserComponent /></Route>\r\n                 </Switch>\r\n            </ul>\r\n            {/*<Route path={`${path}/:user_${props.usersList.id}`}  component={SingleUserPage}/>*/}\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        role: state.auth.role,\r\n        cabinet: state.cabinet,\r\n        usersList: state.usersList\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(UsersComponent);","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\UsersComponent\\SingleUserComponent\\singleUserComponent.jsx",["226","227","228","229"],"import React, {useEffect} from 'react';\r\nimport {connect, useSelector} from \"react-redux\";\r\n\r\nimport {DAL_DeleteUser, DAL_GetSingleUser} from \"../../../../api/api\";\r\nimport {getSingleUserInfoThunkCreator} from \"../../../../redux/singleUserInfoReducer\";\r\n\r\nimport './singleUserComponent.scss'\r\nimport {useParams} from \"react-router-dom\";\r\nimport icon_close from \"../../../../img/icon_close.png\";\r\n\r\nconst SingleUserComponent = (props) => {\r\n\r\n    const userId = +useParams().undefined.toString().slice(1)\r\n    // const getSingleUserInfo = (userId) => {\r\n    //     // let singleUserInfo =  DAL_GetSingleUser()\r\n    //     // console.log(singleUserInfo)\r\n    //     getSingleUserInfoThunkCreator(userId)\r\n    // }\r\n    const deleteUser = () => {\r\n        DAL_DeleteUser(userId)\r\n    }\r\n    console.log(userId)\r\n    console.log(props)\r\n    return (\r\n        <>\r\n            <li className=\"sing_user_container container\">\r\n                <div className=\"row sing_user_descr_row\">\r\n                   <div className=\"col-6\">\r\n                       <span className=\"sing_user_descr\">email: </span> {props.singleUserInfo.email}\r\n                   </div>\r\n                    <div className=\"col-6\">\r\n                        <span className=\"sing_user_descr\">id: </span>{userId}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row sing_user_descr_row\">\r\n                    <div className=\"col-6\">\r\n                        <span className=\"sing_user_descr\">приміщення: </span>{props.singleUserInfo.apartments[0].user.apartments.length}\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <span className=\"sing_user_descr\">загальна площа:</span> <span>{props.singleUserInfo.apartments[0].square} <span className=\"sing_user_descr\">м<sub>2</sub></span></span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*<button className=\"btn btn-secondary mr-2\" >Get single user info</button>*/}\r\n                <button className=\"sing_user_delete_btn\" onClick={deleteUser}><img src={icon_close} alt=\"\"/></button>\r\n                <div className=\"row sing_user_descr_row\">\r\n                    {props.singleUserInfo.apartments[0].user.apartments.map( apartment => (\r\n                        <div className=\"sing_user_apartment_container\">\r\n                            <p>{apartment.apartmentName}  ({apartment.square} <span className=\"sing_user_descr\">м<sub>2</sub></span>)</p>\r\n                        </div>\r\n                        )\r\n                    )}\r\n                </div>\r\n            </li>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        singleUserInfo: state.singleUser\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(SingleUserComponent);","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\singleUserInfoReducer.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\redux\\usersListReducer.js",["230"],"// usersList reducer\r\n\r\nimport {toggleIsFetchingAC} from \"./authReducer\";\r\nimport { DAL_GetUsersList} from \"../api/api\";\r\n\r\nconst SET_USERS_LIST = 'SET_USERS_LIST';\r\nconst DELETE_USER = 'DELETE_USER';\r\n\r\n\r\nlet initialState =  [\r\n    {\r\n        \"apartments\": [\r\n            {\r\n                \"apartmentName\": \"string\",\r\n                \"id\": 0,\r\n                \"osbb\": {\r\n                    \"address\": {\r\n                        \"city\": \"string\",\r\n                        \"house\": \"string\",\r\n                        \"id\": 0,\r\n                        \"postalCode\": \"string\",\r\n                        \"street\": \"string\"\r\n                    },\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"apartmentsNumber\": 0,\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"password\": \"string\",\r\n                    \"polls\": [\r\n                        {\r\n                            \"active\": true,\r\n                            \"id\": 0,\r\n                            \"questions\": [\r\n                                {\r\n                                    \"description\": \"string\",\r\n                                    \"id\": 0\r\n                                }\r\n                            ],\r\n                            \"startDate\": \"string\"\r\n                        }\r\n                    ],\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ],\r\n                    \"totalSquare\": 0\r\n                },\r\n                \"ownerKey\": \"string\",\r\n                \"square\": 55,\r\n                \"user\": {\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"password\": \"string\",\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ],\r\n        \"confirmed\": true,\r\n        \"email\": \"Ivanov@mail.com\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": 0,\r\n                \"role\": \"CLIENT\"\r\n            }\r\n        ],\r\n        \"id\": 124\r\n    },\r\n    {\r\n        \"apartments\": [\r\n            {\r\n                \"apartmentName\": \"string\",\r\n                \"id\": 0,\r\n                \"osbb\": {\r\n                    \"address\": {\r\n                        \"city\": \"string\",\r\n                        \"house\": \"string\",\r\n                        \"id\": 0,\r\n                        \"postalCode\": \"string\",\r\n                        \"street\": \"string\"\r\n                    },\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"apartmentsNumber\": 0,\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"password\": \"string\",\r\n                    \"polls\": [\r\n                        {\r\n                            \"active\": true,\r\n                            \"id\": 0,\r\n                            \"questions\": [\r\n                                {\r\n                                    \"description\": \"string\",\r\n                                    \"id\": 0\r\n                                }\r\n                            ],\r\n                            \"startDate\": \"string\"\r\n                        }\r\n                    ],\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ],\r\n                    \"totalSquare\": 0\r\n                },\r\n                \"ownerKey\": \"string\",\r\n                \"square\": 99,\r\n                \"user\": {\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"password\": \"string\",\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ],\r\n        \"confirmed\": true,\r\n        \"email\": \"Petrov@mail.com\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": 0,\r\n                \"role\": \"CLIENT\"\r\n            }\r\n        ],\r\n        \"id\": 125\r\n    },\r\n    {\r\n        \"apartments\": [\r\n            {\r\n                \"apartmentName\": \"string\",\r\n                \"id\": 0,\r\n                \"osbb\": {\r\n                    \"address\": {\r\n                        \"city\": \"string\",\r\n                        \"house\": \"string\",\r\n                        \"id\": 0,\r\n                        \"postalCode\": \"string\",\r\n                        \"street\": \"string\"\r\n                    },\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"apartmentsNumber\": 0,\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"password\": \"string\",\r\n                    \"polls\": [\r\n                        {\r\n                            \"active\": true,\r\n                            \"id\": 0,\r\n                            \"questions\": [\r\n                                {\r\n                                    \"description\": \"string\",\r\n                                    \"id\": 0\r\n                                }\r\n                            ],\r\n                            \"startDate\": \"string\"\r\n                        }\r\n                    ],\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ],\r\n                    \"totalSquare\": 0\r\n                },\r\n                \"ownerKey\": \"string\",\r\n                \"square\": 80,\r\n                \"user\": {\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"password\": \"string\",\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ],\r\n        \"confirmed\": true,\r\n        \"email\": \"Sidorov@mail.com\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": 0,\r\n                \"role\": \"CLIENT\"\r\n            }\r\n        ],\r\n        \"id\": 126\r\n    },\r\n    {\r\n        \"apartments\": [\r\n            {\r\n                \"apartmentName\": \"string\",\r\n                \"id\": 0,\r\n                \"osbb\": {\r\n                    \"address\": {\r\n                        \"city\": \"string\",\r\n                        \"house\": \"string\",\r\n                        \"id\": 0,\r\n                        \"postalCode\": \"string\",\r\n                        \"street\": \"string\"\r\n                    },\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"apartmentsNumber\": 0,\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"password\": \"string\",\r\n                    \"polls\": [\r\n                        {\r\n                            \"active\": true,\r\n                            \"id\": 0,\r\n                            \"questions\": [\r\n                                {\r\n                                    \"description\": \"string\",\r\n                                    \"id\": 0\r\n                                }\r\n                            ],\r\n                            \"startDate\": \"string\"\r\n                        }\r\n                    ],\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ],\r\n                    \"totalSquare\": 0\r\n                },\r\n                \"ownerKey\": \"string\",\r\n                \"square\": 180,\r\n                \"user\": {\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"password\": \"string\",\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ],\r\n        \"confirmed\": true,\r\n        \"email\": \"Efremov@mail.com\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": 0,\r\n                \"role\": \"CLIENT\"\r\n            }\r\n        ],\r\n        \"id\": 127\r\n    },\r\n    {\r\n        \"apartments\": [\r\n            {\r\n                \"apartmentName\": \"string\",\r\n                \"id\": 0,\r\n                \"osbb\": {\r\n                    \"address\": {\r\n                        \"city\": \"string\",\r\n                        \"house\": \"string\",\r\n                        \"id\": 0,\r\n                        \"postalCode\": \"string\",\r\n                        \"street\": \"string\"\r\n                    },\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"apartmentsNumber\": 0,\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"name\": \"string\",\r\n                    \"password\": \"string\",\r\n                    \"polls\": [\r\n                        {\r\n                            \"active\": true,\r\n                            \"id\": 0,\r\n                            \"questions\": [\r\n                                {\r\n                                    \"description\": \"string\",\r\n                                    \"id\": 0\r\n                                }\r\n                            ],\r\n                            \"startDate\": \"string\"\r\n                        }\r\n                    ],\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ],\r\n                    \"totalSquare\": 0\r\n                },\r\n                \"ownerKey\": \"string\",\r\n                \"square\": 78,\r\n                \"user\": {\r\n                    \"apartments\": [\r\n                        null\r\n                    ],\r\n                    \"confirmed\": true,\r\n                    \"email\": \"string\",\r\n                    \"id\": 0,\r\n                    \"password\": \"string\",\r\n                    \"roles\": [\r\n                        {\r\n                            \"id\": 0,\r\n                            \"role\": \"CLIENT\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ],\r\n        \"confirmed\": true,\r\n        \"email\": \"Azazadze@mail.com\",\r\n        \"roles\": [\r\n            {\r\n                \"id\": 0,\r\n                \"role\": \"CLIENT\"\r\n            }\r\n        ],\r\n        \"id\": 128\r\n    }\r\n]\r\n\r\n\r\nconst usersListReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USERS_LIST:\r\n            // console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case DELETE_USER:\r\n            console.log(`deleting user #: ${action.payload} `)\r\n            return state.filter( user => user.id !== action.payload  ) ;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Actions\r\n const set_users_list  = (values) => (\r\n    {type: SET_USERS_LIST, payload: {...values}});\r\n\r\n const delete_user  = (userId) => (\r\n    {type: DELETE_USER, payload: {...userId}});\r\n\r\nexport const  getUsersListThunkCreator = (dispatch) => {\r\n    return () => {\r\n        console.log('getting users list')\r\n        // dispatch(toggleIsFetchingAC(true))\r\n        DAL_GetUsersList()\r\n            .then(\r\n                res => {\r\n\r\n                    // dispatch(toggleIsFetchingAC(false))\r\n                    return dispatch(set_users_list(res))\r\n                }\r\n            )\r\n            .catch(\r\n                (error) => {\r\n                    dispatch(toggleIsFetchingAC(false))\r\n                    console.log('getting users list failure'+error.message)\r\n                }\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport const  deleteUserThunkCreator = (dispatch) => {\r\n    return () => {\r\n        console.log('deleting user')\r\n        dispatch(toggleIsFetchingAC(true))\r\n\r\n        DAL_GetUsersList()\r\n            .then(\r\n                res => {\r\n                    // console.log('getting users list success')\r\n                    dispatch(toggleIsFetchingAC(false))\r\n                    return dispatch(set_users_list(res))\r\n                }\r\n            )\r\n            .catch(\r\n                (error) => {\r\n                    dispatch(toggleIsFetchingAC(false))\r\n                    console.log('getting users list failure'+error.message)\r\n                }\r\n\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default usersListReducer;","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\UsersComponent\\UsersListComponent\\UsersListComponent.jsx",["231","232"],"import React, {useEffect} from 'react';\r\nimport {NavLink, useRouteMatch } from \"react-router-dom\";\r\nimport {DAL_DeleteUser} from \"../../../../api/api\";\r\nimport icon_close from  \"./../../../../img/icon_close.png\"\r\n\r\nexport  const UsersListComponent = (props) => {\r\n\r\n    // useEffect(()=>{\r\n    //     let savedDrafts = DAL_GetPollsDraft()\r\n    // },[])\r\n    const deleteUser = (userId) => {\r\n        DAL_DeleteUser(userId)\r\n    }\r\n    let img1 = document.createElement(\"img\");\r\n    img1.src = './img/icon_options';\r\n    let {path, url} = useRouteMatch()\r\n    return (\r\n        <>\r\n            {\r\n                props.usersList.map( user => (\r\n                    <li className=\"users_list_element\">\r\n                        <NavLink\r\n                            className=\"users_list_item row\"\r\n                            activeClassName=\"active_user\"\r\n                            to={`${path}/:${user.id}`} >\r\n                            <span className=\"col-6\">{user.email}</span>\r\n                            <span className=\"col-2\">{user.apartments[0].square}<span className=\"sing_user_descr\">м<sub>2</sub></span></span>\r\n                            <span className=\"col-2\">{user.id}</span>\r\n                            <span className=\"col-1\">\r\n                                <button className=\"sing_user_delete_btn users_list_delete_user\" onClick={() => deleteUser(user.id)}><img src={icon_close} alt=\"options\"/></button>\r\n                            </span>\r\n\r\n\r\n                        </NavLink>\r\n                    </li>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\ArchivePage\\ArchivePage.jsx",["233"],"import React from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport SingleApartment from \"../FacilitiesPage/SingleApartmentComponent/singleApartment\";\r\n\r\nconst ArchivePage = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        voting: store.voting,\r\n    }\r\n};\r\n\r\nconst ArchiveVotingContainer = connect(mapStateToProps, null)(ArchivePage)\r\n\r\nexport default ArchiveVotingContainer;","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\activeVotingsReducer.js",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\AccountInfo\\AccountInfo.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\VotingPage\\ActiveVotingPage\\questionComponent.jsx",["234","235","236","237","238"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getActiveVotingThunkCreator} from \"../../../../redux/activeVotingsReducer\";\r\nimport \"./questionComponent.scss\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {DAL_Vote} from \"../../../../api/api\";\r\n\r\nconst ClientVotingForm = (props) => {\r\n    let handleSubmit = props.handleSubmit;\r\n    return(\r\n        <form name={`clientVotingForm${props.id}`} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field type=\"radio\" component=\"input\" value={'YES'} checked name=\"answer\"/>\r\n                <label htmlFor=\"yes\" className=\"client_voting_label\">  Так</label>\r\n            </div>\r\n            <div>\r\n                <Field type=\"radio\" component=\"input\" value={'NO'} name=\"answer\"/>\r\n                <label htmlFor=\"no\" className=\"client_voting_label\">  Ні</label>\r\n            </div>\r\n            <div>\r\n                <Field id=\"\" type=\"radio\" component=\"input\" value={'ABSTEIN'} name=\"answer\"/>\r\n                <label htmlFor=\"abstein\" className=\"client_voting_label\">  Утриматися</label>\r\n            </div>\r\n\r\n            <div className=\"btn btn-primary w-100 mt-2\">Голосувати</div>\r\n        </form>\r\n    )\r\n}\r\nexport const ClientVotingFormRedux = reduxForm({form: `clientVotingForm`})(ClientVotingForm)\r\n\r\nconst ActiveVoting = (props) => {\r\n    const [isAuth, setIsAuth] = useState(false)\r\n    const [voteError, setVoteError] = useState(false)\r\n    let isSupport;\r\n\r\n    useEffect(()=>{\r\n        props.getActivePools();\r\n    }, [])\r\n\r\n    const votingHandler = (values) => {\r\n        DAL_Vote(values)\r\n            .then(response => {\r\n                console.log(response)\r\n                alert(`Ваш голос зараховано: ${response.data.message}`)\r\n            }).catch((error) => {\r\n            // Error\r\n            if (error) {\r\n                alert(error.message)\r\n                console.log(error.response)\r\n                setVoteError(error.response.data.message)\r\n\r\n            } else if (error.request) {\r\n                console.log(error.request);\r\n            } else {\r\n                console.log('Error', error.message);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    const votingAbsoluteResult = (question) => {\r\n        let support = question.answersPercentageByCountMethod.YES;\r\n        let ageinst = question.answersPercentageByCountMethod.NO;\r\n        support > ageinst ? isSupport = true : isSupport = false\r\n        return support > ageinst ? 'за' : 'проти'\r\n    }\r\n    const votingNumberResult = (question) => {\r\n        let support = question.answersPercentageByCountMethod.YES.BY_APARTMENTS;\r\n        let ageinst = question.answersPercentageByCountMethod.NO.BY_APARTMENTS;\r\n        let abstein = question.answersPercentageByCountMethod.ABSTAIN.BY_APARTMENTS;\r\n        let summ = support+abstein+abstein;\r\n         return  isSupport ? summ/100*support : summ/100*ageinst\r\n    }\r\n    const votingSquareResult = (question) => {\r\n        let support = question.answersPercentageByCountMethod.YES.BY_SQUARE;\r\n        let ageinst = question.answersPercentageByCountMethod.NO.BY_SQUARE;\r\n        let abstein = question.answersPercentageByCountMethod.ABSTAIN.BY_SQUARE;\r\n        let summ = support+abstein+abstein;\r\n         return  isSupport ? summ/100*support : summ/100*ageinst\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container voting_container\">\r\n                {props.activePolls.map( (voting) => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"voting_container\">\r\n\r\n                                <div>{voting.questions.map((question) => {\r\n                                    return(\r\n\r\n                                        <div className=\"question_container\" key={question.id}>\r\n\r\n                                            <div className=\"question_description\">\r\n                                                {question.questionDto.description}\r\n                                            </div>\r\n                                            <div className=\"question_result\">\r\n                                                Статус голосування: {voting.active? 'активне' : 'завершене'}\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-4\">\r\n                                                    Голосування від: {voting.startDate}\r\n                                                </div>\r\n                                                <div className=\"col-4\">\r\n                                                    Прийняло участь: {voting.numberOfApartmentsVoted}\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr className=\"auth_hr\"/>\r\n                                            <div className={`row`}>\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    Проголосували: {votingAbsoluteResult(question)}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={`row`}>\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    Поквартирно: - {votingNumberResult(question)}%\r\n                                                </div>\r\n                                                <div className=\"col-12 col-md-6\">\r\n                                                    Площею: - {votingNumberResult(question)}м<sup>2</sup>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr className=\"auth_hr\"/>\r\n                                            <div>\r\n                                                <h1 className=\"client_voting_header\">Ваша відповідь:</h1>\r\n                                                <ClientVotingFormRedux id={question.id}/>\r\n                                                {voteError? voteError : ''}\r\n                                                {/*{*/}\r\n                                                {/*    ((id) => {*/}\r\n                                                {/*        const ClientVotingForm = (props) => {*/}\r\n                                                {/*            let handleSubmit = props.handleSubmit;*/}\r\n                                                {/*            return(*/}\r\n                                                {/*            <form name={`clientVotingForm${props.id}`} onSubmit={handleSubmit}>*/}\r\n                                                {/*            <div>*/}\r\n                                                {/*            <Field type=\"radio\" component=\"input\" value={'YES'} checked name=\"answer\"/>*/}\r\n                                                {/*            <label htmlFor=\"yes\" className=\"client_voting_label\">  Так</label>*/}\r\n                                                {/*            </div>*/}\r\n                                                {/*            <div>*/}\r\n                                                {/*            <Field type=\"radio\" component=\"input\" value={'NO'} name=\"answer\"/>*/}\r\n                                                {/*            <label htmlFor=\"no\" className=\"client_voting_label\">  Ні</label>*/}\r\n                                                {/*            </div>*/}\r\n                                                {/*            <div>*/}\r\n                                                {/*            <Field type=\"radio\" component=\"input\" value={'ABSTEIN'} name=\"answer\"/>*/}\r\n                                                {/*            <label htmlFor=\"abstein\" className=\"client_voting_label\">  Утриматися</label>*/}\r\n                                                {/*            </div>*/}\r\n\r\n                                                {/*            <div className=\"btn btn-primary w-100 mt-2\">Голосувати</div>*/}\r\n                                                {/*            </form>*/}\r\n                                                {/*            )*/}\r\n                                                {/*        }*/}\r\n                                                {/*        export const ClientVotingFormRedux = reduxForm({form: `clientVotingForm${id}`})(ClientVotingForm)*/}\r\n                                                {/*    })()*/}\r\n                                                {/*}*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}</div>\r\n                            </div>\r\n                        </>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        activePolls: store.activePolls.polls,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getActivePools: () => getActiveVotingThunkCreator(dispatch),\r\n    }\r\n};\r\n\r\nconst ActiveVotingPage = connect(mapStateToProps, mapDispatchToProps())(ActiveVoting)\r\n\r\nexport default ActiveVotingPage ;","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\Modal_windows\\UserAddApartmentModal\\UserAddApartrmentModal.jsx",["239","240","241"],"import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport \"./UserAddApartmentModal.scss\"\r\nimport close from \"../../../../img/icon_close.png\"\r\nimport {CustomInput} from \"../../../../common/formControls\";\r\nimport {keyValidator, requiredField} from \"../../../../utils/validators\";\r\nimport {DAL_AttachApartmentToUser, DAL_CreateNewApartment} from \"../../../../api/api\";\r\nimport {CLIENT_setApartmentAC} from \"../../../../redux/CLIENTCabinetReducer\";\r\n\r\nconst AddFacilitiesModalContainer = (props) => {\r\n    return(\r\n        <div  className=\"add_fac_container\" >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst userModalKeyForm = (props) => {\r\n\r\n    return(\r\n        <form\r\n            name=\"modalKeyForm\"\r\n            className=\"row flex-column justify-content-center\"\r\n            onSubmit={props.handleSubmit}>\r\n            <Field\r\n                className=\"add_fac_modal_input align-self-auto\"\r\n                name={'key'}\r\n                component={CustomInput}\r\n                type=\"text\"\r\n                placeholder='ключ'\r\n                validate={[requiredField]}\r\n            />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"add_fac_modal_submit btn btn-primary align-self-auto \"\r\n                    value=\"Додати приміщення\"/>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\nconst UserAddApartmentModal = (props) => {\r\n    const showResultHandler = (props, res) => {\r\n        try{\r\n            if(res.data.id) {\r\n                alert(`Приміщення ${res.data.apartmentName} зареэстровано`)\r\n                props.toggleModal()\r\n            }\r\n        } catch {\r\n            alert(`Помилка ${res.message}`)\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmit = (ownerKey) => {\r\n\r\n        DAL_AttachApartmentToUser(ownerKey.key)\r\n            .then(\r\n                (res) => {\r\n                    showResultHandler(props, res)\r\n                    CLIENT_setApartmentAC(res.data)\r\n                }\r\n        ) .catch(\r\n            error => {\r\n                alert(error.message)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <AddFacilitiesModalContainer toggleModal={props.toggleModal}>\r\n            <div className=\"add_fac_modal_container\">\r\n                <h1 className=\"add_fac_modal_container_header\">Введіть ключ приміщення</h1>\r\n                <ReduxModalKeyForm onSubmit={onSubmit}/>\r\n                <button className=\"add_fac_close\" onClick={(event)=>{props.toggleModal(event)}}>\r\n                    <img src={close} alt=\"close\"/>\r\n                </button>\r\n            </div>\r\n        </AddFacilitiesModalContainer>\r\n    )\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return  {\r\n//         addNewApartment: () => dispatch()\r\n//     }\r\n// }\r\nexport default UserAddApartmentModal;\r\n\r\nconst ReduxModalKeyForm = reduxForm({form: 'userModalKeyForm'})(userModalKeyForm);\r\n\r\n","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\Modal_windows\\OSBBAddApartmentModal\\OSBBAddApatrmentModal.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\redux\\apartmentsReducer.js",["242","243","244","245"],"// Facilities reducer\r\n\r\nimport {DAL_GenerateApartmentKey} from \"../api/api\";\r\n\r\nconst SET_APARTMENT = 'SET_APARTMENT';\r\nconst ADD_APARTMENT = 'ADD_APARTMENT';\r\nconst DELETE_APARTMENT = 'DELETE_APARTMENT';\r\nconst SET_NEW_APARTMENT_KEY = 'SET_NEW_APARTMENT_KEY';\r\n\r\nlet initialState = [\r\n    {\r\n        \"apartmentName\": \"Квартира №1\",\r\n        \"id\": 111,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 100\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №2\",\r\n        \"id\": 112,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 100\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №3\",\r\n        \"id\": 113,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 100\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №4\",\r\n        \"id\": 114,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 100\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №5\",\r\n        \"id\": 115,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 100\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №6\",\r\n        \"id\": 116,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 33\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №7\",\r\n        \"id\": 117,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 66\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №8\",\r\n        \"id\": 118,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 80\r\n    },\r\n    {\r\n        \"apartmentName\": \"Квартира №9\",\r\n        \"id\": 119,\r\n        \"ownerKey\": \"відсутній\",\r\n        \"square\": 112\r\n    }\r\n\r\n];\r\n\r\nconst apartmentsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_APARTMENT:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case ADD_APARTMENT:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_NEW_APARTMENT_KEY:\r\n            let newState1 = [...state]\r\n            for( let apartment of newState1 ) {\r\n                if( apartment.id === action.apartmentId ){\r\n                    apartment.apartmentKey = action.apartmentKey\r\n                    break\r\n                }\r\n            }\r\n            return {\r\n                ...newState1\r\n            };\r\n        case DELETE_APARTMENT:\r\n            let newState = [...state];\r\n            return newState.filter(apartments => apartments.id !== action.payload);\r\n\r\n        default:\r\n\r\n            return state;\r\n    }\r\n};\r\n\r\n// Actions\r\nconst setApartments  = (apartments) => (\r\n    {type: SET_APARTMENT, payload: apartments});\r\nconst deleteApartment  = (id) => (\r\n    {type: DELETE_APARTMENT, payload: id});\r\nconst set_apartment_key  = (apartmentId, apartmentKey) => (\r\n    {type: SET_NEW_APARTMENT_KEY, apartmentId: apartmentId, apartmentKey: apartmentKey});\r\n\r\n// Thunks\r\n\r\n\r\n\r\n\r\n\r\nexport default apartmentsReducer;","D:\\IT-work\\VOTAN2\\votan\\src\\redux\\OSBBCabinetReducer.js",["246"],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\ApartmentsTable\\ApartmentsTable.jsx",["247","248"],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\ApartmentsTable\\SingleApartmentComponent\\singleApartment.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\OSBBRegisterForm\\osbbRegisterForm.jsx",["249","250"],"import React, {useState} from 'react';\r\n\r\n\r\nimport {requiredField} from \"../../../utils/validators.js\"\r\nimport {CustomInput} from \"../../../common/formControls\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport \"./osbbRegisterForm.scss\"\r\nimport {DAL_RegisterNewOSBB} from \"../../../api/api\";\r\n\r\n\r\nconst addressFormContainer = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-12 col-md-6 flex-column\">\r\n                <label htmlFor=\"postalCode\">Індекс ОСББ</label>\r\n\r\n                <Field\r\n                    className=\"auth_field osbb_register_form_input\"\r\n                    name={'address.postalCode'}\r\n                    id={'postalCode'}\r\n                    component={CustomInput}\r\n                    type=\"text\"\r\n                    placeholder='Індекс вашого ОСББ'\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 flex-column\">\r\n                <label htmlFor=\"city\">Місто</label>\r\n                <Field\r\n                    className=\"auth_field osbb_register_form_input\"\r\n                    name={'address.city'}\r\n                    id={'city'}\r\n                    component={CustomInput}\r\n                    type=\"text\"\r\n                    placeholder='Місто'\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 flex-column\">\r\n                <label htmlFor=\"street\">Вулиця</label>\r\n\r\n                <Field\r\n                    className=\"auth_field osbb_register_form_input\"\r\n                    name={'address.street'}\r\n                    id={'street'}\r\n                    component={CustomInput}\r\n                    type=\"text\"\r\n                    placeholder='Вулиця'\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n            <div className=\"col-12 col-md-6 flex-column\">\r\n                <label htmlFor=\"house\">Номер будинку</label>\r\n                <Field\r\n                    className=\"auth_field osbb_register_form_input\"\r\n                    name={'address.house'}\r\n                    id={'house'}\r\n                    component={CustomInput}\r\n                    type=\"text\"\r\n                    placeholder='Будинок'\r\n                    validate={[requiredField]}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst osbbRegisterFormContainer = (props) => {\r\n\r\n    let handleSubmit = props.handleSubmit;\r\n\r\n    let registerOsbbHandler = (values) => {\r\n        console.log(values)\r\n        // DAL_RegisterNewOSBB(values).then(\r\n        //     (response) => console.log(`New OSBB register response ${response}`)\r\n        // )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row account_info\">\r\n               <form\r\n                    onSubmit={handleSubmit(registerOsbbHandler)}\r\n                    name=\"osbbRegisterForm\"\r\n                    className=\"osbb_register_form_container col-12\"\r\n               >\r\n                   <h2 className=\"auth_form_header align-self-start \">Для реєстрації ОСББ заповніть форму </h2>\r\n\r\n                   <div className=\"row\">\r\n                   <div className=\"col-12 col-md-6 flex-column\">\r\n                       <label htmlFor=\"osbbName\">Назва ОСББ</label>\r\n                       <Field\r\n                            className=\"auth_field osbb_register_form_input\"\r\n                            name={'name'}\r\n                            id={'name'}\r\n                            component={CustomInput}\r\n                            type=\"text\"\r\n                            placeholder='Назва ОСББ'\r\n                            validate={[requiredField]}\r\n                       />\r\n                   </div>\r\n                       <Field\r\n                            name={'address'}\r\n                            id={'address'}\r\n                            component={addressFormContainer}\r\n                       />\r\n                       <div className=\"col-12 col-md-6 flex-column\">\r\n                           <label htmlFor=\"osbbArea\">Площа, м<sup><sup>2</sup></sup></label>\r\n                           <Field\r\n                                className=\"osbb_register_form_input\"\r\n                                name={'totalSquare'}\r\n                                id={'totalSquare'}\r\n                                component={CustomInput}\r\n                                type=\"text\"\r\n                                placeholder='Площа будинку'\r\n                                validate={[requiredField]}\r\n                           />\r\n                       </div>\r\n                       <div className=\"col-12 col-md-6 flex-column\">\r\n                           <label htmlFor=\"osbbArea\">Кількість квартир</label>\r\n                           <Field\r\n                                className=\"osbb_register_form_input\"\r\n                                name={'apartmentsNumber'}\r\n                                id={'apartmentsNumber'}\r\n                                component={CustomInput}\r\n                                type=\"text\"\r\n                                placeholder='Кількість квартир'\r\n                                validate={[requiredField]}\r\n                           />\r\n                        </div>\r\n                   </div>\r\n                   {/*<button className=\"auth_submit btn btn-primary\" disabled={props.pristine || props.submitting}>Підтвердити</button>*/}\r\n               </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst OsbbRegisterReduxForm = reduxForm(\r\n    {form: \"osbbRegisterForm\"}\r\n)(osbbRegisterFormContainer);\r\n\r\nexport const OSBBRegisterForm = (props) => {\r\n    console.log(props.osbb)\r\n    return(\r\n        <>\r\n            <OsbbRegisterReduxForm/>\r\n        </>\r\n    )\r\n};","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\USERCabintPage\\USERCabinetPage.jsx",["251","252","253","254"],"import React, { useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { useRouteMatch} from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport UserAddApartmentModal from \"../Modal_windows/UserAddApartmentModal/UserAddApartrmentModal\";\r\n\r\nimport CLIENTInfo from \"./CLIENTSInfo\";\r\n\r\n\r\nconst USERCabinetPage = (props) => {\r\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n    const toggleModal = (e) => {\r\n        setIsModalOpen( !isModalOpen )\r\n    }\r\n\r\n    let {path, url} = useRouteMatch()\r\n    return (\r\n        <>\r\n            {\r\n                props.cabinet\r\n                    ? <>\r\n                        <div className=\"accounts_info_left col-12 col-md-8  align-content-center\">\r\n                            <a href=\"#\" className=\" p-0\">{props.cabinet.userEmail || \"default@test.com\"} </a>\r\n                            <a href=\"#\" className=\" p-0\">Активних голосуваннь: {props.cabinet.unvotedPollsNumber || 0}</a>\r\n                        </div>\r\n                        <button\r\n                            className=\"col-12 col-md-3 btn btn-primary account_add_facility mt-2 mt-lg-0\"\r\n                            onClick={toggleModal}\r\n                        >\r\n                            'Додати приміщення'\r\n                        </button>\r\n                        <CLIENTInfo osbb={props.cabinet.osbbs[0]}/>\r\n\r\n                        {\r\n                            isModalOpen && ReactDOM.createPortal(\r\n\r\n                                 <UserAddApartmentModal toggleModal={toggleModal}/>\r\n                            ,\r\n                            document.getElementById('portal')\r\n                            )\r\n                        }\r\n                    </>\r\n                    :  ''\r\n\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        role: state.auth.role,\r\n        cabinet: state.CLIENTsCabinet,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(USERCabinetPage);","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\OSBBCabinetPage\\OSBBCabinetPage.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\RegisterComponent.jsx",["255"],"import React from 'react';\r\nimport {NavLink, useRouteMatch} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const RegisterComponent = () => {\r\n    let {path, url} = useRouteMatch()\r\n    return(\r\n        <>\r\n            <h3 className=\"auth_form_header\">Зареєструвати: </h3>\r\n            <NavLink\r\n                className=\"auth_nav_link auth_submit btn btn-primary\"\r\n                activeClassName={'registration_nav_link_active'}\r\n                to={`${url}/osbb`}>\r\n                ОСББ\r\n            </NavLink>\r\n            <NavLink\r\n                className=\"auth_nav_link auth_submit btn btn-primary\"\r\n                activeClassName={'registration_nav_link_active'}\r\n                to={`${url}/client`}>\r\n                Користувач\r\n            </NavLink>\r\n\r\n            <hr className=\"auth_hr\"/>\r\n             <NavLink\r\n                   className=\"auth_submit btn btn-primary\"\r\n                   activeClassName={'registration_nav_link_active'}\r\n                   to={`../../main/login`}>\r\n                 Увійти в акаунт\r\n             </NavLink>\r\n\r\n        </>\r\n    )\r\n}","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\RegisterOSBB.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\RegisterClient.jsx",["256","257"],"import {DAL_Registration_client} from \"../../api/api\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {CustomInput} from \"../../common/formControls\";\r\nimport {confirmPass, emailValidator, requiredField} from \"../../utils/validators\";\r\nimport {NavLink, Redirect, useRouteMatch} from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst RegisterClientContainer = (props) => {\r\n    const [redirectNeeded, setRedirectNeeded] = useState(false)\r\n    let handleSubmit = props.handleSubmit;\r\n    let { path, url } = useRouteMatch();\r\n    let registerHandler = (values) => {\r\n        let valuesCopy = {...values}\r\n        delete (valuesCopy.confirmed)\r\n\r\n        debugger\r\n        DAL_Registration_client(valuesCopy)\r\n            .then(\r\n                (response) => {\r\n                    console.log(response)\r\n                    if(response.status === 200 || response.status === 201){\r\n                        alert('Підтвердіть авторизацію за посиланням на ваш e-mail')\r\n                        return(setRedirectNeeded(true))\r\n                    }\r\n                        else alert(`Помилка ${response.message}`)\r\n                }\r\n            )\r\n            .catch(\r\n                (error) => {\r\n                    console.log(error)\r\n                    alert(`Помилка ${error.message}`)\r\n                    console.log(error.message)\r\n                }\r\n            )\r\n\r\n    };\r\n    console.log('ssssssss')\r\n    console.log(props)\r\n    console.log('ssssssss')\r\n    return(\r\n        <>\r\n            { redirectNeeded ? <Redirect to=\"../../login\"/> : ''}\r\n            <div className=\"row justify-content-center mr-0 ml-0\">\r\n                <div className=\"col-12 p-0\">\r\n                    <h2 className=\"auth_form_header align-self-start \">Реєстрація користувача</h2>\r\n                </div>\r\n                <form\r\n                    onSubmit={handleSubmit(registerHandler)}\r\n                    className=\"auth_form_container col-12\"\r\n                >\r\n                    <Field\r\n                        className=\"auth_field\"\r\n                        name={'email'}\r\n                        id={'email'}\r\n                        component={CustomInput}\r\n                        type=\"text\"\r\n                        placeholder='Електронна адреса'\r\n                        validate={[requiredField, emailValidator]}\r\n                    />\r\n\r\n                    <Field\r\n                        className=\"auth_field\"\r\n                        name={'password'}\r\n                        id={'password'}\r\n                        component={CustomInput}\r\n                        type=\"password\"\r\n                        placeholder='Пароль'\r\n                        validate={[requiredField]}\r\n                    />\r\n\r\n                    <Field\r\n                        className=\"auth_field\"\r\n                        name={'confirmed'}\r\n                        id={'confirm_password'}\r\n                        component={CustomInput}\r\n                        type=\"password\"\r\n                        placeholder='Повторити пароль'\r\n                        validate={[requiredField, confirmPass]}\r\n                    />\r\n\r\n                    <button className=\"auth_submit btn btn-primary\" disabled={props.pristine || props.submitting }>Зареєструватися</button>\r\n\r\n                    <hr className=\"auth_hr\"/>\r\n\r\n                    <NavLink\r\n                        className=\"auth_submit btn btn-primary\"\r\n                        activeClassName={'registration_nav_link_active'}\r\n                        to={`../../main/login`}>Увійти в акаунт</NavLink>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport const RegisterClient =  reduxForm(\r\n    {form: \"registerClient\"}\r\n)(RegisterClientContainer);","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AuthPage\\regisrerHandler.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\redux\\CLIENTCabinetReducer.js",["258"],"\r\n// usersCabinetReducer reducer\r\n\r\nimport {\r\n    DAL_DeleteApartment,\r\n    DAL_GetCLIENTCabinet,\r\n} from \"../api/api\";\r\nimport {toggleIsFetchingAC} from \"./authReducer\";\r\n\r\nconst SET_CLIENT_CABINET_DATA = 'SET_USER_CABINET_DATA';\r\nconst SET_APARTMENT = 'SET_APARTMENT';\r\nconst ADD_APARTMENT = 'ADD_APARTMENT';\r\nconst DELETE_APARTMENT = 'DELETE_APARTMENT';\r\nconst SET_NEW_APARTMENT_KEY = 'SET_NEW_APARTMENT_KEY';\r\n\r\nlet initialState = {\r\n    \"userEmail\": \"test@test.com\",\r\n    \"osbbs\": [\r\n        {\r\n            \"id\": 123,\r\n            \"name\": \"Зарічний\",\r\n            \"address\": {\r\n                \"house\": \"5a\",\r\n                \"postalCode\": \"02055\",\r\n                \"city\": \"Київ\",\r\n                \"street\": \"Бажана\"\r\n            },\r\n            \"currentUserApartments\": [\r\n                {\r\n                    \"apartmentName\": \"flat1\",\r\n                    \"id\": 123,\r\n                    \"ownerKey\": \"14572-OSRN\",\r\n                    \"square\": 100\r\n                }\r\n            ],\r\n            \"hasUnvotedActivePolls\": true\r\n        }\r\n    ],\r\n    \"unvotedPollsNumber\": 3\r\n}\r\n\r\n\r\nconst CLIENTCabinetReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_CLIENT_CABINET_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_APARTMENT:\r\n             let newState1 = {...state}\r\n            return  newState1.apartments.push(action.payload)\r\n        case ADD_APARTMENT:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SET_NEW_APARTMENT_KEY:\r\n            debugger\r\n            let newState2 = [...state]\r\n            for( let apartment of newState2 ) {\r\n                if( apartment.id === action.apartmentId ){\r\n                    apartment.apartmentKey = action.apartmentKey\r\n                    break\r\n                }\r\n            }\r\n            return {\r\n                ...newState2\r\n            };\r\n        // case DELETE_APARTMENT:\r\n        //     debugger\r\n        //     let newState5 = [...state];\r\n        //     return newState5.apartments.filter(apartments => apartments.id !== action.payload);\r\n\r\n        default:\r\n\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\n// Action creators\r\nexport const set_CLIENT_cabinet_data  = (values) => (\r\n    {type: SET_CLIENT_CABINET_DATA, payload: {...values}});\r\n\r\nexport const CLIENT_setApartmentAC = (apartments) => (\r\n    {type: SET_APARTMENT, payload: apartments});\r\nexport const CLIENT_deleteApartment  = (id) => (\r\n    {type: DELETE_APARTMENT, payload: id});\r\nexport const CLIENT_set_apartment_key  = (apartmentId, apartmentKey) => (\r\n    {type: SET_NEW_APARTMENT_KEY, apartmentId: apartmentId, apartmentKey: apartmentKey});\r\n\r\n        // Thunks\r\n\r\nexport const  getCLIENTCabinet = () => {\r\n\r\n    console.log('gettingClientCabinet')\r\n    return dispatch => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n\r\n        DAL_GetCLIENTCabinet()\r\n            .then(\r\n                res => {\r\n\r\n                    dispatch(toggleIsFetchingAC(false))\r\n                    return dispatch(set_CLIENT_cabinet_data(res))\r\n                }\r\n            )\r\n            .catch(\r\n                (error) => {\r\n                    dispatch(toggleIsFetchingAC(false))\r\n                    alert(error.message)\r\n                }\r\n\r\n            )\r\n    }\r\n\r\n}\r\n\r\n// export const CLIENT_deleteApartmentTC = (apartmentId) => {\r\n//\r\n//     return (dispatch) => {\r\n//\r\n//\r\n//         DAL_DeleteApartment(apartmentId)\r\n//             .then(\r\n//                 res => {\r\n//                     // dispatch(toggleIsFetchingAC(false))\r\n//                     alert(`Приміщення ${apartmentId} видалено`)\r\n//                     return dispatch(CLIENT_deleteApartment(res))\r\n//                 }\r\n//             )\r\n//             .catch(\r\n//                 (error) => {\r\n//                     dispatch(toggleIsFetchingAC(false))\r\n//                 }\r\n//\r\n//             )\r\n//     }\r\n//\r\n// }\r\n\r\nexport default CLIENTCabinetReducer;","D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\USERCabintPage\\CLIENTSInfo.jsx",[],"D:\\IT-work\\VOTAN2\\votan\\src\\components\\AccountPage\\USERCabintPage\\CLIENTSingleApartment.jsx",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":23},{"ruleId":"263","severity":1,"message":"267","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":25},{"ruleId":"263","severity":1,"message":"268","line":8,"column":8,"nodeType":"265","messageId":"266","endLine":8,"endColumn":27},{"ruleId":"263","severity":1,"message":"269","line":27,"column":7,"nodeType":"265","messageId":"266","endLine":27,"endColumn":23},{"ruleId":"263","severity":1,"message":"270","line":1,"column":27,"nodeType":"265","messageId":"266","endLine":1,"endColumn":35},{"ruleId":"263","severity":1,"message":"271","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":16},{"ruleId":"263","severity":1,"message":"272","line":3,"column":26,"nodeType":"265","messageId":"266","endLine":3,"endColumn":34},{"ruleId":"273","severity":1,"message":"274","line":23,"column":8,"nodeType":"275","endLine":23,"endColumn":26,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":60,"column":33,"nodeType":"279","endLine":65,"endColumn":68},{"ruleId":"263","severity":1,"message":"280","line":6,"column":5,"nodeType":"265","messageId":"266","endLine":6,"endColumn":10},{"ruleId":"263","severity":1,"message":"281","line":19,"column":11,"nodeType":"265","messageId":"266","endLine":19,"endColumn":15},{"ruleId":"263","severity":1,"message":"282","line":19,"column":17,"nodeType":"265","messageId":"266","endLine":19,"endColumn":20},{"ruleId":"263","severity":1,"message":"283","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":27},{"ruleId":"263","severity":1,"message":"284","line":7,"column":9,"nodeType":"265","messageId":"266","endLine":7,"endColumn":23},{"ruleId":"263","severity":1,"message":"282","line":13,"column":16,"nodeType":"265","messageId":"266","endLine":13,"endColumn":19},{"ruleId":"263","severity":1,"message":"270","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":24},{"ruleId":"285","severity":1,"message":"286","line":41,"column":59,"nodeType":"287","messageId":"288","endLine":41,"endColumn":60},{"ruleId":"263","severity":1,"message":"289","line":6,"column":9,"nodeType":"265","messageId":"266","endLine":6,"endColumn":28},{"ruleId":"273","severity":1,"message":"290","line":31,"column":7,"nodeType":"275","endLine":31,"endColumn":9,"suggestions":"291"},{"ruleId":"263","severity":1,"message":"292","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"293","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":26},{"ruleId":"263","severity":1,"message":"294","line":12,"column":11,"nodeType":"265","messageId":"266","endLine":12,"endColumn":20},{"ruleId":"263","severity":1,"message":"294","line":13,"column":13,"nodeType":"265","messageId":"266","endLine":13,"endColumn":22},{"ruleId":"263","severity":1,"message":"282","line":16,"column":16,"nodeType":"265","messageId":"266","endLine":16,"endColumn":19},{"ruleId":"263","severity":1,"message":"292","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"295","line":2,"column":18,"nodeType":"265","messageId":"266","endLine":2,"endColumn":29},{"ruleId":"263","severity":1,"message":"296","line":4,"column":25,"nodeType":"265","messageId":"266","endLine":4,"endColumn":42},{"ruleId":"263","severity":1,"message":"297","line":5,"column":9,"nodeType":"265","messageId":"266","endLine":5,"endColumn":38},{"ruleId":"263","severity":1,"message":"298","line":397,"column":8,"nodeType":"265","messageId":"266","endLine":397,"endColumn":19},{"ruleId":"263","severity":1,"message":"292","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"282","line":16,"column":16,"nodeType":"265","messageId":"266","endLine":16,"endColumn":19},{"ruleId":"263","severity":1,"message":"299","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":23},{"ruleId":"263","severity":1,"message":"300","line":33,"column":12,"nodeType":"265","messageId":"266","endLine":33,"endColumn":18},{"ruleId":"263","severity":1,"message":"301","line":33,"column":20,"nodeType":"265","messageId":"266","endLine":33,"endColumn":29},{"ruleId":"273","severity":1,"message":"302","line":39,"column":8,"nodeType":"275","endLine":39,"endColumn":10,"suggestions":"303"},{"ruleId":"263","severity":1,"message":"304","line":41,"column":11,"nodeType":"265","messageId":"266","endLine":41,"endColumn":24},{"ruleId":"263","severity":1,"message":"305","line":75,"column":11,"nodeType":"265","messageId":"266","endLine":75,"endColumn":29},{"ruleId":"263","severity":1,"message":"306","line":7,"column":9,"nodeType":"265","messageId":"266","endLine":7,"endColumn":21},{"ruleId":"263","severity":1,"message":"307","line":8,"column":36,"nodeType":"265","messageId":"266","endLine":8,"endColumn":58},{"ruleId":"308","severity":1,"message":"309","line":60,"column":9,"nodeType":"310","messageId":"311","endLine":66,"endColumn":17,"fix":"312"},{"ruleId":"263","severity":1,"message":"313","line":3,"column":9,"nodeType":"265","messageId":"266","endLine":3,"endColumn":33},{"ruleId":"263","severity":1,"message":"314","line":104,"column":7,"nodeType":"265","messageId":"266","endLine":104,"endColumn":20},{"ruleId":"263","severity":1,"message":"315","line":106,"column":7,"nodeType":"265","messageId":"266","endLine":106,"endColumn":22},{"ruleId":"263","severity":1,"message":"316","line":108,"column":7,"nodeType":"265","messageId":"266","endLine":108,"endColumn":24},{"ruleId":"263","severity":1,"message":"317","line":5,"column":5,"nodeType":"265","messageId":"266","endLine":5,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":49,"column":33,"nodeType":"320","messageId":"321","endLine":49,"endColumn":35},{"ruleId":"318","severity":1,"message":"322","line":71,"column":52,"nodeType":"320","messageId":"323","endLine":71,"endColumn":54},{"ruleId":"263","severity":1,"message":"270","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":24},{"ruleId":"263","severity":1,"message":"324","line":8,"column":9,"nodeType":"265","messageId":"266","endLine":8,"endColumn":28},{"ruleId":"263","severity":1,"message":"281","line":16,"column":10,"nodeType":"265","messageId":"266","endLine":16,"endColumn":14},{"ruleId":"263","severity":1,"message":"282","line":16,"column":16,"nodeType":"265","messageId":"266","endLine":16,"endColumn":19},{"ruleId":"325","severity":1,"message":"326","line":23,"column":29,"nodeType":"279","endLine":23,"endColumn":58},{"ruleId":"325","severity":1,"message":"326","line":24,"column":29,"nodeType":"279","endLine":24,"endColumn":58},{"ruleId":"263","severity":1,"message":"281","line":7,"column":10,"nodeType":"265","messageId":"266","endLine":7,"endColumn":14},{"ruleId":"263","severity":1,"message":"281","line":11,"column":11,"nodeType":"265","messageId":"266","endLine":11,"endColumn":15},{"ruleId":"263","severity":1,"message":"282","line":11,"column":17,"nodeType":"265","messageId":"266","endLine":11,"endColumn":20},{"ruleId":"263","severity":1,"message":"327","line":5,"column":5,"nodeType":"265","messageId":"266","endLine":5,"endColumn":24},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'HeaderContainer' is defined but never used.","Identifier","unusedVar","'apartmentsReducer' is defined but never used.","'usersCabinetReducer' is defined but never used.","'composeEnhancers' is assigned a value but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'role'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["330"],"jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role listitem. This role is implicit on the element li.","JSXOpeningElement","'token' is assigned a value but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'FacilitiesContainer' is defined but never used.","'NewVotingDraft' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'DAL_CreateNewVoting' is defined but never used.","React Hook useEffect has a missing dependency: 'drafts'. Either include it or remove the dependency array. You can also do a functional update 'setDrafts(d => ...)' if you only need 'drafts' in the 'setDrafts' call.",["331"],"'useEffect' is defined but never used.","'DAL_GetUsersList' is defined but never used.","'usersList' is assigned a value but never used.","'useSelector' is defined but never used.","'DAL_GetSingleUser' is defined but never used.","'getSingleUserInfoThunkCreator' is defined but never used.","'delete_user' is assigned a value but never used.","'SingleApartment' is defined but never used.","'isAuth' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["332"],"'votingHandler' is assigned a value but never used.","'votingSquareResult' is assigned a value but never used.","'keyValidator' is defined but never used.","'DAL_CreateNewApartment' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"333","text":"334"},"'DAL_GenerateApartmentKey' is defined but never used.","'setApartments' is assigned a value but never used.","'deleteApartment' is assigned a value but never used.","'set_apartment_key' is assigned a value but never used.","'DAL_AttachApartmentToUser' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'DAL_RegisterNewOSBB' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DAL_DeleteApartment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},[2058,2060],".","Update the dependencies array to be: [props, props.apartments, role]",{"range":"341","text":"342"},"Update the dependencies array to be: [drafts]",{"range":"343","text":"344"},"Update the dependencies array to be: [props]",{"range":"345","text":"346"},[899,917],"[props, props.apartments, role]",[896,898],"[drafts]",[1550,1552],"[props]"]